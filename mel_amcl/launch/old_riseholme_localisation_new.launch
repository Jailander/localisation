<?xml version="1.0" encoding="ISO-8859-15"?>

<launch>


   <arg name="gps_log_directory" default="riseholme"/>
   <arg name="gps_frame_id" default="septentrio"/>
   <arg name="gps_yaw_offset_rad" default="-0.0698131"/>   <!-- gps yaw offset - if the two gps's are not parallel with forward direction of robot. & The yaw is not added to the urdf tf -->


  <!-- static transform publisher for the "main" gps receiver (where lat, lon comes from) -->
  <node name="septentrio_tf" pkg="tf" type="static_transform_publisher" respawn="true" args="-0.30 0 0.41 0 0 0 base_link septentrio 100" output="log">
  </node>


  <!-- launch this node to transform data to the riseholme map frame -->
  <node pkg="mel_amcl" type="gps_to_map.py" name="gps_transform" output="screen">
    <param name="gps_frame_id" value="$(arg gps_frame_id)" />
    <param name="gps_log_directory" value="$(arg gps_log_directory)" />  <!-- directory name inside the mel_amcl package gps_logs folder: mel_amcl/gps_logs/ -->     
    <param name="gps_yaw_offset_rad" value="$(arg gps_yaw_offset_rad)" />   
    
    <remap from="gps/fix" to="/gps/fix"/> <!-- gps input topic name -->
    <remap from="yaw" to="/yaw"/> <!-- name of earth referenced heading imu type msg -->
 </node> 


  <!-- launch amcl but dont publish map->odom tf as this is handled by ekf_map -->
  <include file="$(find mel_amcl)/launch/mel_amcl.launch"/>


  <!-- load parameters for eKFs: odom, map and separate gps -->
  <rosparam command="load" file="$(find mel_amcl)/config/rasberry_ekf.yaml" />

  <!-- eKF for the odom frame -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_local" clear_params="true">
    <remap from="odometry/filtered" to="rl/odom"/>
  </node>

  <!-- eKF for the map frame -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_map" clear_params="true">
    <remap from="odometry/filtered" to="rl/map_pose"/>
  </node>

  <!-- eKF for the gps in map frame, to use output, set use_gps_odom arg in mel_amcl to true --> 
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_gps" clear_params="true">
    <remap from="odometry/filtered" to="odometry/gps"/>
  </node> 


  <node pkg="topic_tools" type="relay" name="relay_initial_estimate" clear_params="true"
    args="/set_pose /initialpose" />
    

</launch>
